plugins
{
    id "java"
    id "war"
    id "org.liquibase.gradle" version "2.0.1"
}

compileJava.options.encoding = 'UTF-8'

repositories
{
    maven
    {
    	url "http://central.maven.org/maven2"
    }
}

test
{
    useJUnitPlatform()
}

dependencies
{
    testCompile("org.junit.jupiter:junit-jupiter-api:5.4.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.4.0")
    compile group: 'javax.interceptor', name: 'javax.interceptor-api', version: '1.2.2'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'javax.inject:javax.inject:1'
    implementation 'javax.enterprise:cdi-api:2.0.SP1'
    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.3'
    liquibaseRuntime 'org.apache.derby:derby:10.15.1.3'
    liquibaseRuntime 'org.apache.derby:derbyclient:10.15.1.3'
    implementation 'org.apache.derby:derby:10.15.1.3'
    implementation 'org.apache.derby:derbyclient:10.15.1.3'
}

test
{
    testLogging.showStandardStreams = true
}

tasks.withType(JavaCompile) 
{
    options.encoding = 'UTF-8'
}

compileJava.doFirst 
{
    ProcessBuilder builder = new ProcessBuilder(["native2ascii", "src/main/resources/konofeev/message-ru.properties", "src/main/resources/konofeev/message.properties"]);
    Process process = builder.start();
    process.waitFor();
}

compileJava
{
    options.debug = true
}

liquibase {
    activities {
        main {
            File propsFile = new File("${project.rootDir}/src/main/resources/liquibase/liquibase.properties")
            Properties properties = new Properties()
            properties.load(new FileInputStream(propsFile))
            changeLogFile 'src/main/resources/liquibase/changeLogMaster.xml'
            url 'jdbc:derby://localhost:1527/j2ee;create=true'
            username 'APP'
            password 'APP'
        }
        runList = "main"
    }
}
